{"version":3,"sources":["Components/darkMode.js","Components/movie.js","Components/button.js","Components/Cart.js","Components/PopUp.js","Components/LoaderMini/LoaderMini.js","Components/Search.js","Components/Loader/Loader.js","App.js","Components/recommendMovie.js","Components/componentMoviePage.js","Components/videoComponent.js","Components/MoviePage.js","Components/User.js","Components/Router.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","DarkModeContext","props","useState","darkMode","changeTheme","Provider","value","children","Movies","state","willWatch","this","context","results","key","addMovieToWillWatch","addMovieToHistory","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","overview","to","pathname","id","movie_id","onClick","type","setState","Component","contextType","Btn","theme","useContext","previousPage","nextPage","Cart","moviesWillWatch","togglePopup","length","Popup","closePopup","console","log","map","movie","React","LoaderMini","Search","onSubmit","fetchSearchData","name","placeholder","aria-label","isLoadedSearch","Loader","version","xmlns","in","result","stdDeviation","mode","values","apiKey","App","page","totalPages","showPopup","isLoaded","search","input","fetchSearch","a","fetch","apiCall","json","data","total_pages","e","target","elements","preventDefault","fetchData","componentDidMount","updateMoviesHistory","JSON","parse","localStorage","getItem","flat","splice","push","setItem","stringify","updateMoviesWillWatch","filter","item","prevProps","prevState","snapshot","Fragment","MoviesRec","recommend","movieId","addHistory","MovieP","activeMovie","tagline","vote_average","budget","status","release_date","Video","videos","frameBorder","allow","allowFullScreen","MoviePage","fetchOneMovie","location","reqMovie","resMovie","fetchSimiliar","reqRecommends","resRecommends","fetchVideos","reqVideos","resVideos","componentDidUpdate","User","deleteHistory","clear","Router","basename","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d54d5ee4.chunk.js","sourcesContent":["import React, {Component, createContext, useState} from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\n\r\nconst DarkModeContext=(props)=>{\r\n  const [darkMode,changeTheme] = useState(false);\r\n\r\n  const change =()=>{\r\n    changeTheme(!darkMode);\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <ThemeContext.Provider value={{\r\n        darkMode: darkMode,\r\n        changeTheme:change\r\n      }}>\r\n        {props.children}\r\n      </ThemeContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default DarkModeContext;","import React, {Component, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nclass Movies extends Component{\r\n    state={\r\n        willWatch: false\r\n    };\r\n  static contextType=ThemeContext;\r\n    render() {\r\n\r\n        const {darkMode} = this.context;\r\n        const {results,key,addMovieToWillWatch,addMovieToHistory,removeMovieFromWillWatch}= this.props;\r\n        return (\r\n          <div key={key} className={`movieTable marginAuto movieTableSmall width100Small ${darkMode?'darkTableMovie':''}`}>\r\n              <div className={'wrapper wrapperHeightSmall wrapperHeightMedium'}>\r\n                  <img className={'width100Small'} src={`https://image.tmdb.org/t/p/w500${results.backdrop_path || results.poster_path}`}\r\n                       alt={results.title}/>\r\n              </div>\r\n              <h2>{results.title}</h2>\r\n              <div className={'textOverview textOverviewSmall'}>{results.overview}</div>\r\n              <Link to={{\r\n                  pathname: `/MoviePage/${results.id}`,\r\n                  state: {\r\n                      movie_id: results.id\r\n                  }\r\n              }}>\r\n                  <button onClick={()=>(addMovieToHistory(results))} className={'btn btn-danger buttonMorePositionSmall  buttonMorePosition float'}>\r\n                      More\r\n                  </button>\r\n              </Link>\r\n              {this.state.willWatch ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger buttonAddPositionSmall buttonAddPosition\"\r\n                  onClick={()=> {\r\n                      this.setState({\r\n                          willWatch: false\r\n                      });\r\n                      removeMovieFromWillWatch(results)\r\n                  }}\r\n                >\r\n                    <i className=\"fas fa-heart\"/>\r\n                </button>\r\n              ) : (\r\n                <button type=\"button\" className=\"btn btn-secondary buttonAddPositionSmall buttonAddPosition\" onClick={()=> {\r\n                    this.setState({\r\n                        willWatch: true\r\n                    });\r\n                    addMovieToWillWatch(results)}\r\n                }>\r\n                    <i className=\"far fa-heart\"/>\r\n                </button>\r\n              )\r\n              }\r\n\r\n\r\n          </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n};\r\nexport default Movies;","import React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nconst Btn= (props)=>{\r\n  const theme = useContext(ThemeContext);\r\n    return(\r\n\r\n           <div className={'navPos pagination marginAuto'}>\r\n             <button onClick={props.previousPage} className={` paginationButton ${theme.darkMode?'btn btn-secondary':'btn btn-warning'}`} >\r\n               <i className=\"fas fa-angle-double-left\"/>\r\n             </button>\r\n             <button onClick={props.nextPage} className={` paginationButton ${theme.darkMode?'btn btn-secondary':'btn btn-warning'}`} >\r\n               <i className=\"fas fa-angle-double-right\"/>\r\n             </button>\r\n           </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Btn;","import React, {Component} from 'react';\r\nimport PopMovie from \"./pop\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nclass Cart extends Component {\r\n static contextType = ThemeContext;\r\n\r\n\r\n\r\n  render() {\r\n    const {darkMode} = this.context;\r\n    const {moviesWillWatch,togglePopup}=this.props;\r\n    return (\r\n      <div className={'width-15'}>\r\n        <button onClick={togglePopup} className={`cartWidth ${darkMode?'btn btn-secondary':'btn btn-warning'}`}>\r\n          <i  className={\"fas fa-heart\"}/>\r\n          {moviesWillWatch.length}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PopMovie from \"./pop\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nclass Popup extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  render() {\r\n    const {darkMode}=this.context;\r\n    const {closePopup, moviesWillWatch}=this.props;\r\n    console.log(\"fff\",moviesWillWatch);\r\n\r\n    return (\r\n      <div className='popup'>\r\n        <div className={`popup_inner  width-80 popSmall d-flex f-wrap ${darkMode?'darkPopUp':''}`}>\r\n\r\n          <button onClick={closePopup} className={` buttonPop ${darkMode?'btn btn-secondary popButton':'popButton btn btn-warning '}`}>\r\n            <i className=\"fas fa-times\"/>\r\n          </button>\r\n            {moviesWillWatch.map((movie)=>(\r\n\r\n\r\n                  <div key={movie.id} className={`movieTablePop movieTablePopSmall ${darkMode?'darkTableMovie':''}`}  >\r\n                    <Link to={{\r\n                      pathname:`/MoviePage/${movie.id}`,\r\n                      state:{\r\n                        movie_id:movie.id\r\n                      }\r\n                    }} >\r\n                      <img className={'recommendImg posterSmall'} src={`https://image.tmdb.org/t/p/w500${movie.poster_path }`} alt={movie.title}/>\r\n                    </Link>\r\n                    <h6>{movie.title}</h6>\r\n                  </div>\r\n\r\n\r\n            ))}\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Popup;","import './LoaderMini.css';\r\nimport React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"../darkMode\";\r\n\r\nconst LoaderMini  =()=> {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <div >\r\n      <div className={`cssload-container `}>\r\n        <div className={theme.darkMode?'dark':'cssload-speeding-wheel'}/>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LoaderMini;","import React, {Component} from 'react';\r\nimport LoaderMini from \"./LoaderMini/LoaderMini\";\r\n\r\nconst Search = (props)=>{\r\n\r\n    return (\r\n      <div className={'search  marginAuto'}>\r\n        <form onSubmit={props.fetchSearchData} className=\"form-inline searchSmall   marginAuto\">\r\n            <input className=\"form-control mr-sm-2\" name={'input'} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-danger my-2 my-sm-0 searchButton\" type=\"submit\">\r\n              <i className=\"fas fa-search\"/>\r\n            </button>\r\n            {props.isLoadedSearch?<LoaderMini/>:''}\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader  =()=> {\r\n\r\n    return (\r\n      <div className={'z-index'}>\r\n        <div className=\"cssload-dots\">\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n        </div>\r\n\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <defs>\r\n            <filter id=\"goo\">\r\n              <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"12\"/>\r\n              <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0\t0 1 0 0 0\t0 0 1 0 0\t0 0 0 18 -7\"\r\n  result=\"goo\"/>\r\n              {/*<feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" ></feBlend>*/}\r\n            </filter>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Loader;","import React, {Component} from 'react';\n\n\nimport './App.css';\nimport './Adaptive.css';\n\nimport Movies from \"./Components/movie\";\nimport Btn from \"./Components/button\";\nimport {Link} from \"react-router-dom\";\nimport Cart from \"./Components/Cart\";\nimport Popup from \"./Components/PopUp\";\nimport PopMovie from \"./Components/pop\";\nimport Search from \"./Components/Search\";\nimport {ThemeContext} from \"./Components/darkMode\";\nimport Loader from \"./Components/Loader/Loader\";\nimport ReactPaginate from 'react-paginate';\n\n\n\nconst apiKey = '34c6dd52b40998a7fba114d180097301';\n\n\n\n\nclass App extends Component{\n\n  state={\n    results:[],\n    page:1,\n    totalPages:null,\n    moviesWillWatch: [],\n    showPopup: false,\n    isLoaded:false,\n    isLoadedSearch:false,\n    search:false,\n    input:null,\n\n  };\n\n  static contextType = ThemeContext;\n\n  nextPage=()=>{\n      if(this.state.page!==500){\n        this.setState({page:this.state.page+1});\n\n\n      }\n    console.log(this.state.page);\n    };\n  previousPage=()=>{\n      if (this.state.page!==1) {\n        this.setState({page:this.state.page-1});\n      }\n    };\n  fetchSearch = async()=>{\n    if (this.state.input) {\n      const apiCall = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${this.state.input}&page=${this.state.page}&include_adult=false`);\n      const data = await apiCall.json();\n      this.setState({results: data.results, totalPages: data.total_pages, isLoadedSearch:false});\n      console.log(data);\n    }\n  };\n\n  fetchSearchData = async(e)=>{\n    this.setState({isLoadedSearch:true, search:true, page:1});\n    const input = e.target.elements.input.value;\n\n    e.preventDefault();\n    await this.setState({input:input});\n    console.log(this.state.input);\n    await this.fetchSearch();\n  };\n\n\n  fetchData = async()=>{\n\n      const apiCall = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${this.state.page}`);\n      const data = await apiCall.json();\n      this.setState({results:data.results, totalPages:data.total_pages, isLoaded:true});\n      console.log(data);\n\n  };\n\n  componentDidMount = ()=> {\n      this.fetchData();\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.page!==this.state.page){\n      if (this.state.search){\n        this.fetchSearch();\n      }else{\n        this.fetchData();\n      }\n\n    }\n  }\n\n  addMovieToHistory = (results) => {\n\n    const updateMoviesHistory = [JSON.parse(localStorage.getItem('history'))].flat(10);\n    console.log(updateMoviesHistory);\n    if(updateMoviesHistory[0]===null){\n      updateMoviesHistory.splice(0,1);\n    }\n\n    updateMoviesHistory.push(results);\n    localStorage.setItem('history',JSON.stringify(updateMoviesHistory));\n\n  };\n\n  addMovieToWillWatch = (results) => {\n\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch];\n    updateMoviesWillWatch.push(results);\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n\n\n  };\n\n  removeMovieFromWillWatch = movie => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(item){\n      return item.id !== movie.id\n    });\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    })\n  };\n\n  togglePopup=()=>{\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  };\n\n  render() {\n    const {darkMode,changeTheme} = this.context;\n   return (\n     <div className={`${darkMode?'darkBody':''} `}>\n      <div className={`App container marginAuto position-relative ${darkMode?'darkBodySite':''}`}>\n        <nav className={`navbar sticky-top navbar-light bg-light marginAuto header red d-flex justify-content-around ${darkMode?'darkHeader':''}`}>\n          <h2 className={'HeaderText'}>MovieApp</h2>\n            {/*<Btn nextPage={this.nextPage} previousPage={this.previousPage} />*/}\n            <div className={'navPosButtons'}>\n              <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={()=>{changeTheme()}}>\n                {darkMode? <i className=\"fas fa-sun\"/>: <i className=\"fas fa-moon\"/>}\n              </button>\n            <Link to=\"/user\">\n              <button className={darkMode?'btn btn-secondary':'btn btn-warning'}>\n                <i className=\"fas fa-user\"/>\n              </button>\n            </Link>\n              <Cart moviesWillWatch={this.state.moviesWillWatch} togglePopup={this.togglePopup}/>\n              {this.state.showPopup ?\n                <Popup\n                  closePopup={this.togglePopup}\n                  moviesWillWatch={this.state.moviesWillWatch}\n                />\n                : null\n              }\n            </div>\n\n        </nav>\n        <Search fetchSearchData={this.fetchSearchData} isLoadedSearch={this.state.isLoadedSearch}/>\n        <React.Fragment>\n          <div className={'movies width-90 marginAuto'}>\n            {this.state.isLoaded?'':<Loader/>}\n            {this.state.results.map((results) => {\n               return(\n                 <Movies  results={results}\n                         key={results.id}\n                         addMovieToWillWatch={this.addMovieToWillWatch}\n                          addMovieToHistory={this.addMovieToHistory}\n                         removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                 />\n                 )\n            })\n            }</div>\n        </React.Fragment>\n        {this.state.isLoaded?<Btn nextPage={this.nextPage} previousPage={this.previousPage} />:''}\n      </div>\n     </div>\n  );\n }\n}\n\nexport default App;\n","import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nconst MoviesRec =props=>{\r\n  const theme = useContext(ThemeContext);\r\n  return(\r\n    <div className={'movies width-80 marginAuto'}>\r\n        { props.recommend.map((recommend)=>{\r\n            return (\r\n              <div className={'marginAuto'} key={recommend.id}>\r\n\r\n                    <div  className={`movieTableRecommends marginAuto movieTablePopSmall ${theme.darkMode?'darkTableMovie colorText':''}`} onClick={props.movieId} >\r\n                      <Link className={'colorText'} to={{\r\n                        pathname:`/MoviePage/${recommend.id}`,\r\n                        state:{\r\n                          movie_id:recommend.id\r\n                        }\r\n                      }} >\r\n                        <img onClick={()=>(props.addHistory(recommend))} className={'recommendImg posterSmall'} src={`https://image.tmdb.org/t/p/w500${recommend.poster_path }`} alt={recommend.title}/>\r\n                      </Link>\r\n                      <h6>{recommend.title}</h6>\r\n                    </div>\r\n\r\n              </div>\r\n            );\r\n        }) }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MoviesRec;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MovieP = props =>{\r\n    return(\r\n      <div>\r\n        <div className={'d-flex secondPage margin'}>\r\n            <div className={'imgDiv'}>\r\n                <img className={'poster secondPoster'} src={`https://image.tmdb.org/t/p/w500${ props.activeMovie.poster_path}`} alt={props.activeMovie.title}/>\r\n            </div>\r\n            <div>\r\n                <h2>{props.activeMovie.title}</h2>\r\n                <h4>{props.activeMovie.tagline}</h4>\r\n                <div>{props.activeMovie.overview}</div>\r\n                <h6>Rating: {props.activeMovie.vote_average}</h6>\r\n                <h6>Budget: {props.activeMovie.budget}$</h6>\r\n                <h6>Status: {props.activeMovie.status}</h6>\r\n                <h6>Release Date: {props.activeMovie.release_date}</h6>\r\n\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MovieP;","import React from \"react\";\r\n\r\nconst Video = (props) =>{\r\n    return(\r\n        <div className={'video'}>\r\n            <iframe className={'videoSize videoSizeMed'}  src={`https://www.youtube.com/embed/${props.videos}`} frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport MoviesRec from \"./recommendMovie\";\r\nimport MovieP from \"./componentMoviePage\";\r\nimport Video from \"./videoComponent\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nconst apiKey = '34c6dd52b40998a7fba114d180097301';\r\n\r\n\r\nclass MoviePage extends React.Component{\r\n    state= {\r\n        activeMovie: [],\r\n        recommend:[],\r\n        videos:[],\r\n        movie_id:null\r\n    };\r\n\r\n    static contextType = ThemeContext;\r\n\r\n    fetchOneMovie=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqMovie = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`);\r\n        const resMovie = await reqMovie.json();\r\n        this.setState({activeMovie:resMovie});\r\n\r\n    };\r\n\r\n    fetchSimiliar=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqRecommends = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}/similar?api_key=${apiKey}&language=en-US&page=1`);\r\n        const resRecommends = await reqRecommends.json();\r\n        this.setState({recommend:resRecommends.results, movie_id:resRecommends.results.id});\r\n\r\n    };\r\n\r\n    fetchVideos=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqVideos = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${apiKey}&language=en-US`);\r\n        const resVideos = await reqVideos.json();\r\n        this.setState({videos:resVideos.results[0].key});\r\n    };\r\n\r\n    componentDidMount= () =>{\r\n\r\n        this.fetchOneMovie();\r\n        this.fetchSimiliar();\r\n        this.fetchVideos();\r\n\r\n\r\n    };\r\n    addHistory = (results) => {\r\n\r\n        const updateMoviesHistory = [JSON.parse(localStorage.getItem('history'))].flat(10);\r\n        console.log(updateMoviesHistory);\r\n        if(updateMoviesHistory[0]===null){\r\n            updateMoviesHistory.splice(0,1);\r\n        }\r\n\r\n        updateMoviesHistory.push(results);\r\n        localStorage.setItem('history',JSON.stringify(updateMoviesHistory));\r\n\r\n    };\r\n    componentDidUpdate= (prevState) =>{\r\n        if(this.state.movie_id!==prevState.movie_id){\r\n            this.componentDidMount();\r\n        }\r\n    };\r\n    movieId=()=>{\r\n      this.setState({movie_id:this.props.location.state.movie_id})\r\n    };\r\n    render(){\r\n      const {darkMode,changeTheme} = this.context;\r\n        return(\r\n          <div className={`body width100Small  ${darkMode?'darkBody':''} `}>\r\n            <div className={`container width100Small marginAuto ${darkMode?'darkBodySite':''}`}>\r\n                <nav className={`navbar sticky-top navbar-light bg-light header red margin ${darkMode?'darkHeader':''}`}>\r\n                    <Link to=\"/\"><button className={darkMode?'btn btn-secondary':'btn btn-warning'} >\r\n                        <i className=\"fas fa-arrow-left\"/>\r\n                    </button></Link>\r\n                  <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={()=>{changeTheme()}}>\r\n                    {darkMode? <i className=\"fas fa-sun\"/>: <i className=\"fas fa-moon\"/>}\r\n                  </button>\r\n                </nav>\r\n                <MovieP activeMovie={this.state.activeMovie}/>\r\n                <Video videos={this.state.videos}/>\r\n                <div className={'marginAuto'}>\r\n                    <h2>Recommendations:</h2>\r\n                    <MoviesRec movieId={this.movieId} addHistory={this.addHistory} recommend={this.state.recommend}  />\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n}};\r\n\r\nexport default MoviePage;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nclass User extends Component {\r\n  static contextType = ThemeContext;\r\n\r\n  deleteHistory = () =>{\r\n    localStorage.clear();\r\n};\r\n\r\n  render() {\r\n    const {darkMode, changeTheme} = this.context;\r\n    return (\r\n      <div className={darkMode?'darkBody':''}>\r\n        <div className={`App container ${darkMode?'darkBodySite':''}`}>\r\n          <nav className={`navbar sticky-top navbar-light bg-light header red margin ${darkMode?'darkHeader':''}`}>\r\n            <Link to=\"/\"><button className={darkMode?'btn btn-secondary':'btn btn-warning'} >\r\n              <i className=\"fas fa-arrow-left\"/>\r\n            </button></Link>\r\n            <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={this.deleteHistory}>\r\n              <i className=\"fas fa-trash\"/>\r\n            </button>\r\n            <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={()=>{changeTheme()}}>\r\n              {darkMode? <i className=\"fas fa-sun\"/>: <i className=\"fas fa-moon\"/>}\r\n            </button>\r\n          </nav>\r\n          <div className='d-flex flex-wrap justify-content-start'>\r\n            {JSON.parse(localStorage.getItem('history'))\r\n              ?\r\n              JSON.parse(localStorage.getItem('history')).map((recommend)=>{\r\n                return (\r\n                  <div className={'marginAuto'} key={recommend.id}>\r\n\r\n                    <div  className={`movieTableRecommends movieTablePopSmall marginAuto ${darkMode?'darkTableMovie colorText':''}`} >\r\n                      <Link className={'colorText'} to={{\r\n                        pathname:`/MoviePage/${recommend.id}`,\r\n                        state:{\r\n                          movie_id:recommend.id\r\n                        }\r\n                      }} >\r\n                        <img className={'recommendImg posterSmall'} src={`https://image.tmdb.org/t/p/w500${recommend.poster_path }`} alt={recommend.title}/>\r\n                      </Link>\r\n                      <h6>{recommend.title}</h6>\r\n                    </div>\r\n\r\n                  </div>\r\n                );\r\n              })\r\n            :\r\n              <div>\r\n                <h2>Your story is empty</h2>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport {BrowserRouter,HashRouter,Switch,Route} from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport MoviePage from \"./MoviePage\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Router=()=>(\r\n    <HashRouter basename=\"/\">\r\n        <Switch>\r\n            <Route path=\"/\" component={App} exact/>\r\n            <Route path=\"/moviePage/:id\" component={MoviePage}/>\r\n            <Route path = \"/user\" component={User}/>\r\n            <Route component={App}/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Router from \"./Components/Router\";\nimport * as serviceWorker from './serviceWorker';\nimport DarkModeContext from \"./Components/darkMode\";\n\nReactDOM.render(\n  <DarkModeContext>\n    <Router/>\n  </DarkModeContext>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
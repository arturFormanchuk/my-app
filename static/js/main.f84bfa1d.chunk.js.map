{"version":3,"sources":["Components/darkMode.js","Components/movie.js","Components/button.js","Components/Cart.js","Components/PopUp.js","Components/LoaderMini/LoaderMini.js","Components/Search.js","Components/Loader/Loader.js","App.js","Components/recommendMovie.js","Components/componentMoviePage.js","Components/videoComponent.js","Components/MoviePage.js","Components/User.js","Components/callback.js","Components/Login.js","Components/PrivateRoute.js","Components/Router.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","AuthContext","isAuthorized","DarkModeContext","state","darkMode","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","changeTheme","setState","authorize","handleAuthentication","parseHash","err","authResult","accessToken","props","history","push","console","log","this","Provider","value","children","Component","withAuth","WrappedComponent","Consumer","authProps","themeProps","AuthProviderWithRouter","withRouter","Movies","willWatch","context","results","key","addMovieToWillWatch","addMovieToHistory","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","overview","to","pathname","id","movie_id","onClick","type","contextType","Btn","theme","useContext","previousPage","nextPage","Cart","moviesWillWatch","togglePopup","length","Popup","closePopup","map","movie","React","LoaderMini","Search","onSubmit","fetchSearchData","name","placeholder","aria-label","isLoadedSearch","Loader","version","xmlns","in","result","stdDeviation","mode","values","apiKey","App","page","totalPages","showPopup","isLoaded","search","input","fetchSearch","a","fetch","apiCall","json","data","total_pages","e","target","elements","preventDefault","fetchData","componentDidMount","updateMoviesHistory","JSON","parse","localStorage","getItem","flat","splice","setItem","stringify","updateMoviesWillWatch","filter","item","prevProps","prevState","snapshot","Fragment","MoviesRec","recommend","movieId","addHistory","MovieP","activeMovie","tagline","vote_average","budget","status","release_date","Video","videos","frameBorder","allow","allowFullScreen","MoviePage","fetchOneMovie","location","reqMovie","resMovie","fetchSimiliar","reqRecommends","resRecommends","fetchVideos","reqVideos","resVideos","componentDidUpdate","User","deleteHistory","clear","Callback","PrivateRoute","RouteComponent","component","rest","render","routeProps","Router","basename","process","path","exact","Login","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f84bfa1d.chunk.js","sourcesContent":["import React, {Component, createContext, useState} from 'react';\r\nimport auth0 from 'auth0-js';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nexport const ThemeContext = createContext();\r\nexport const AuthContext = createContext({isAuthorized:false});\r\n\r\nclass DarkModeContext extends Component{\r\n  state={\r\n    darkMode:false,\r\n    isAuthorized:false\r\n  };\r\n\r\n  auth0 = new auth0.WebAuth({\r\n    domain:\"dev-adkw966q.eu.auth0.com\",\r\n    clientID:\"2MIFRHkLZzEz5Pje5a8U99UboUia2MxK\",\r\n    redirectUri:\"http://arturformanchuk.github.io/my-app/\",\r\n    responseType:\"token id_token\",\r\n    scope: \"openid\"\r\n\r\n  })\r\n\r\n  changeTheme=()=>{\r\n    this.setState({darkMode:!this.state.darkMode})\r\n  };\r\n\r\n  authorize=()=>{\r\n    this.auth0.authorize();\r\n\r\n  };\r\n\r\n  handleAuthentication = () =>{\r\n    this.auth0.parseHash((err,authResult)=>{\r\n      if(authResult&&authResult.accessToken){\r\n        this.setState({isAuthorized:true},()=>{\r\n          this.props.history.push('/user')\r\n        })\r\n      }else if(err){\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    const {isAuthorized} = this.state;\r\n    return (\r\n      <AuthContext.Provider value={{\r\n        isAuthorized,\r\n        authorize:this.authorize,\r\n        handleAuthentication:this.handleAuthentication\r\n      }}>\r\n        <ThemeContext.Provider value={{\r\n          darkMode: this.state.darkMode,\r\n          changeTheme:this.changeTheme\r\n        }}>\r\n          {this.props.children}\r\n        </ThemeContext.Provider>\r\n      </AuthContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport function withAuth(WrappedComponent) {\r\n  return class AuthHOC extends Component{\r\n    render() {\r\n      return(\r\n        <AuthContext.Consumer>\r\n          {authProps=>(\r\n            <ThemeContext.Consumer>\r\n              {themeProps=>(\r\n                <WrappedComponent {...authProps} {...themeProps} {...this.props}/>\r\n              )}\r\n            </ThemeContext.Consumer>\r\n          )}\r\n        </AuthContext.Consumer>\r\n      )\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nconst AuthProviderWithRouter = withRouter(DarkModeContext);\r\nexport  {AuthProviderWithRouter as DarkModeContext};","import React, {Component, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nclass Movies extends Component{\r\n    state={\r\n        willWatch: false\r\n    };\r\n  static contextType=ThemeContext;\r\n    render() {\r\n\r\n        const {darkMode} = this.context;\r\n        const {results,key,addMovieToWillWatch,addMovieToHistory,removeMovieFromWillWatch}= this.props;\r\n        return (\r\n          <div key={key} className={`movieTable marginAuto movieTableSmall width100Small ${darkMode?'darkTableMovie':''}`}>\r\n              <div className={'wrapper wrapperHeightSmall wrapperHeightMedium'}>\r\n                  <img className={'width100Small'} src={`https://image.tmdb.org/t/p/w500${results.backdrop_path || results.poster_path}`}\r\n                       alt={results.title}/>\r\n              </div>\r\n              <h2>{results.title}</h2>\r\n              <div className={'textOverview textOverviewSmall'}>{results.overview}</div>\r\n              <Link to={{\r\n                  pathname: `/MoviePage/${results.id}`,\r\n                  state: {\r\n                      movie_id: results.id\r\n                  }\r\n              }}>\r\n                  <button onClick={()=>(addMovieToHistory(results))} className={'btn btn-danger buttonMorePositionSmall  buttonMorePosition float'}>\r\n                      More\r\n                  </button>\r\n              </Link>\r\n              {this.state.willWatch ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger buttonAddPositionSmall buttonAddPosition\"\r\n                  onClick={()=> {\r\n                      this.setState({\r\n                          willWatch: false\r\n                      });\r\n                      removeMovieFromWillWatch(results)\r\n                  }}\r\n                >\r\n                    <i className=\"fas fa-heart\"/>\r\n                </button>\r\n              ) : (\r\n                <button type=\"button\" className=\"btn btn-secondary buttonAddPositionSmall buttonAddPosition\" onClick={()=> {\r\n                    this.setState({\r\n                        willWatch: true\r\n                    });\r\n                    addMovieToWillWatch(results)}\r\n                }>\r\n                    <i className=\"far fa-heart\"/>\r\n                </button>\r\n              )\r\n              }\r\n\r\n\r\n          </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n};\r\nexport default Movies;","import React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nconst Btn= (props)=>{\r\n  const theme = useContext(ThemeContext);\r\n    return(\r\n\r\n           <div className={'navPos pagination marginAuto'}>\r\n             <button onClick={props.previousPage} className={` paginationButton ${theme.darkMode?'btn btn-secondary':'btn btn-warning'}`} >\r\n               <i className=\"fas fa-angle-double-left\"/>\r\n             </button>\r\n             <button onClick={props.nextPage} className={` paginationButton ${theme.darkMode?'btn btn-secondary':'btn btn-warning'}`} >\r\n               <i className=\"fas fa-angle-double-right\"/>\r\n             </button>\r\n           </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Btn;","import React, {Component} from 'react';\r\nimport PopMovie from \"./pop\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nclass Cart extends Component {\r\n static contextType = ThemeContext;\r\n\r\n\r\n\r\n  render() {\r\n    const {darkMode} = this.context;\r\n    const {moviesWillWatch,togglePopup}=this.props;\r\n    return (\r\n      <div className={'width-15'}>\r\n        <button onClick={togglePopup} className={`cartWidth ${darkMode?'btn btn-secondary':'btn btn-warning'}`}>\r\n          <i  className={\"fas fa-heart\"}/>\r\n          {moviesWillWatch.length}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PopMovie from \"./pop\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nclass Popup extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  render() {\r\n    const {darkMode}=this.context;\r\n    const {closePopup, moviesWillWatch}=this.props;\r\n\r\n    return (\r\n      <div className='popup'>\r\n        <div className={`popup_inner  width-80 popSmall d-flex f-wrap ${darkMode?'darkPopUp':''}`}>\r\n\r\n          <button onClick={closePopup} className={` buttonPop ${darkMode?'btn btn-secondary popButton':'popButton btn btn-warning '}`}>\r\n            <i className=\"fas fa-times\"/>\r\n          </button>\r\n            {moviesWillWatch.map((movie)=>(\r\n\r\n\r\n                  <div key={movie.id} className={`movieTablePop movieTablePopSmall ${darkMode?'darkTableMovie':''}`}  >\r\n                    <Link to={{\r\n                      pathname:`/MoviePage/${movie.id}`,\r\n                      state:{\r\n                        movie_id:movie.id\r\n                      }\r\n                    }} >\r\n                      <img className={'recommendImg posterSmall'} src={`https://image.tmdb.org/t/p/w500${movie.poster_path }`} alt={movie.title}/>\r\n                    </Link>\r\n                    <h6>{movie.title}</h6>\r\n                  </div>\r\n\r\n\r\n            ))}\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Popup;","import './LoaderMini.css';\r\nimport React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"../darkMode\";\r\n\r\nconst LoaderMini  =()=> {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <div >\r\n      <div className={`cssload-container `}>\r\n        <div className={theme.darkMode?'dark':'cssload-speeding-wheel'}/>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LoaderMini;","import React, {Component} from 'react';\r\nimport LoaderMini from \"./LoaderMini/LoaderMini\";\r\n\r\nconst Search = (props)=>{\r\n\r\n    return (\r\n      <div className={'search  marginAuto'}>\r\n        <form onSubmit={props.fetchSearchData} className=\"form-inline searchSmall   marginAuto\">\r\n            <input className=\"form-control mr-sm-2\" name={'input'} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-danger my-2 my-sm-0 searchButton\" type=\"submit\">\r\n              <i className=\"fas fa-search\"/>\r\n            </button>\r\n            {props.isLoadedSearch?<LoaderMini/>:''}\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader  =()=> {\r\n\r\n    return (\r\n      <div className={'z-index'}>\r\n        <div className=\"cssload-dots\">\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n          <div className=\"cssload-dot\"/>\r\n        </div>\r\n\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <defs>\r\n            <filter id=\"goo\">\r\n              <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"12\"/>\r\n              <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0\t0 1 0 0 0\t0 0 1 0 0\t0 0 0 18 -7\"\r\n  result=\"goo\"/>\r\n              {/*<feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" ></feBlend>*/}\r\n            </filter>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Loader;","import React, {Component} from 'react';\n\n\nimport './App.css';\nimport './Adaptive.css';\n\nimport Movies from \"./Components/movie\";\nimport Btn from \"./Components/button\";\nimport {Link} from \"react-router-dom\";\nimport Cart from \"./Components/Cart\";\nimport Popup from \"./Components/PopUp\";\nimport PopMovie from \"./Components/pop\";\nimport Search from \"./Components/Search\";\nimport {ThemeContext} from \"./Components/darkMode\";\nimport Loader from \"./Components/Loader/Loader\";\nimport ReactPaginate from 'react-paginate';\nimport {withAuth} from  \"./Components/darkMode\";\n\n\n\nconst apiKey = '34c6dd52b40998a7fba114d180097301';\n\n\n\n\nclass App extends Component{\n\n  state={\n    results:[],\n    page:1,\n    totalPages:null,\n    moviesWillWatch: [],\n    showPopup: false,\n    isLoaded:false,\n    isLoadedSearch:false,\n    search:false,\n    input:null,\n\n  };\n\n  static contextType = ThemeContext;\n\n  nextPage=()=>{\n      if(this.state.page!==500){\n        this.setState({page:this.state.page+1});\n\n\n      }\n    console.log(this.state.page);\n    };\n  previousPage=()=>{\n      if (this.state.page!==1) {\n        this.setState({page:this.state.page-1});\n      }\n    };\n  fetchSearch = async()=>{\n    if (this.state.input) {\n      const apiCall = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${this.state.input}&page=${this.state.page}&include_adult=false`);\n      const data = await apiCall.json();\n      this.setState({results: data.results, totalPages: data.total_pages, isLoadedSearch:false});\n      console.log(data);\n    }\n  };\n\n  fetchSearchData = async(e)=>{\n    this.setState({isLoadedSearch:true, search:true, page:1});\n    const input = e.target.elements.input.value;\n\n    e.preventDefault();\n    await this.setState({input:input});\n    console.log(this.state.input);\n    await this.fetchSearch();\n  };\n\n\n  fetchData = async()=>{\n\n      const apiCall = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${this.state.page}`);\n      const data = await apiCall.json();\n      this.setState({results:data.results, totalPages:data.total_pages, isLoaded:true});\n      console.log(data);\n\n  };\n\n  componentDidMount = ()=> {\n      this.fetchData();\n      const {handleAuthentication} = this.props;\n          if(handleAuthentication){\n            handleAuthentication();\n          }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.page!==this.state.page){\n      if (this.state.search){\n        this.fetchSearch();\n      }else{\n        this.fetchData();\n      }\n\n    }\n  }\n\n  addMovieToHistory = (results) => {\n\n    const updateMoviesHistory = [JSON.parse(localStorage.getItem('history'))].flat(10);\n    console.log(updateMoviesHistory);\n    if(updateMoviesHistory[0]===null){\n      updateMoviesHistory.splice(0,1);\n    }\n\n    updateMoviesHistory.push(results);\n    localStorage.setItem('history',JSON.stringify(updateMoviesHistory));\n\n  };\n\n  addMovieToWillWatch = (results) => {\n\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch];\n    updateMoviesWillWatch.push(results);\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n\n\n  };\n\n  removeMovieFromWillWatch = movie => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(item){\n      return item.id !== movie.id\n    });\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    })\n  };\n\n  togglePopup=()=>{\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  };\n\n  render() {\n    const {darkMode,changeTheme} = this.context;\n   return (\n     <div className={`${darkMode?'darkBody':''} `}>\n      <div className={`App container marginAuto position-relative ${darkMode?'darkBodySite':''}`}>\n        <nav className={`navbar sticky-top navbar-light bg-light marginAuto header red d-flex justify-content-around ${darkMode?'darkHeader':''}`}>\n          <h2 className={'HeaderText'}>MovieApp</h2>\n            {/*<Btn nextPage={this.nextPage} previousPage={this.previousPage} />*/}\n            <div className={'navPosButtons'}>\n              <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={()=>{changeTheme()}}>\n                {darkMode? <i className=\"fas fa-sun\"/>: <i className=\"fas fa-moon\"/>}\n              </button>\n            <Link to=\"/user\">\n              <button className={darkMode?'btn btn-secondary':'btn btn-warning'}>\n                <i className=\"fas fa-user\"/>\n              </button>\n            </Link>\n              <Cart moviesWillWatch={this.state.moviesWillWatch} togglePopup={this.togglePopup}/>\n              {this.state.showPopup ?\n                <Popup\n                  closePopup={this.togglePopup}\n                  moviesWillWatch={this.state.moviesWillWatch}\n                />\n                : null\n              }\n            </div>\n\n        </nav>\n        <Search fetchSearchData={this.fetchSearchData} isLoadedSearch={this.state.isLoadedSearch}/>\n        <React.Fragment>\n          <div className={'movies width-90 marginAuto'}>\n            {this.state.isLoaded?'':<Loader/>}\n            {this.state.results.map((results) => {\n               return(\n                 <Movies  results={results}\n                         key={results.id}\n                         addMovieToWillWatch={this.addMovieToWillWatch}\n                          addMovieToHistory={this.addMovieToHistory}\n                         removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                 />\n                 )\n            })\n            }</div>\n        </React.Fragment>\n        {this.state.isLoaded?<Btn nextPage={this.nextPage} previousPage={this.previousPage} />:''}\n      </div>\n     </div>\n  );\n }\n}\n\nexport default withAuth(App);\n","import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\n\r\nconst MoviesRec =props=>{\r\n  const theme = useContext(ThemeContext);\r\n  return(\r\n    <div className={'movies width-80 marginAuto'}>\r\n        { props.recommend.map((recommend)=>{\r\n            return (\r\n              <div className={'marginAuto'} key={recommend.id}>\r\n\r\n                    <div  className={`movieTableRecommends marginAuto movieTablePopSmall ${theme.darkMode?'darkTableMovie colorText':''}`} onClick={props.movieId} >\r\n                      <Link className={'colorText'} to={{\r\n                        pathname:`/MoviePage/${recommend.id}`,\r\n                        state:{\r\n                          movie_id:recommend.id\r\n                        }\r\n                      }} >\r\n                        <img onClick={()=>(props.addHistory(recommend))} className={'recommendImg posterSmall'} src={`https://image.tmdb.org/t/p/w500${recommend.poster_path }`} alt={recommend.title}/>\r\n                      </Link>\r\n                      <h6>{recommend.title}</h6>\r\n                    </div>\r\n\r\n              </div>\r\n            );\r\n        }) }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MoviesRec;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MovieP = props =>{\r\n    return(\r\n      <div>\r\n        <div className={'d-flex secondPage margin'}>\r\n            <div className={'imgDiv'}>\r\n                <img className={'poster secondPoster'} src={`https://image.tmdb.org/t/p/w500${ props.activeMovie.poster_path}`} alt={props.activeMovie.title}/>\r\n            </div>\r\n            <div>\r\n                <h2>{props.activeMovie.title}</h2>\r\n                <h4>{props.activeMovie.tagline}</h4>\r\n                <div>{props.activeMovie.overview}</div>\r\n                <h6>Rating: {props.activeMovie.vote_average}</h6>\r\n                <h6>Budget: {props.activeMovie.budget}$</h6>\r\n                <h6>Status: {props.activeMovie.status}</h6>\r\n                <h6>Release Date: {props.activeMovie.release_date}</h6>\r\n\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MovieP;","import React from \"react\";\r\n\r\nconst Video = (props) =>{\r\n    return(\r\n        <div className={'video'}>\r\n            <iframe className={'videoSize videoSizeMed'}  src={`https://www.youtube.com/embed/${props.videos}`} frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport MoviesRec from \"./recommendMovie\";\r\nimport MovieP from \"./componentMoviePage\";\r\nimport Video from \"./videoComponent\";\r\nimport {ThemeContext} from \"./darkMode\";\r\n\r\nconst apiKey = '34c6dd52b40998a7fba114d180097301';\r\n\r\n\r\nclass MoviePage extends React.Component{\r\n    state= {\r\n        activeMovie: [],\r\n        recommend:[],\r\n        videos:[],\r\n        movie_id:null\r\n    };\r\n\r\n    static contextType = ThemeContext;\r\n\r\n    fetchOneMovie=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqMovie = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`);\r\n        const resMovie = await reqMovie.json();\r\n        this.setState({activeMovie:resMovie});\r\n\r\n    };\r\n\r\n    fetchSimiliar=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqRecommends = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}/similar?api_key=${apiKey}&language=en-US&page=1`);\r\n        const resRecommends = await reqRecommends.json();\r\n        this.setState({recommend:resRecommends.results, movie_id:resRecommends.results.id});\r\n\r\n    };\r\n\r\n    fetchVideos=async()=>{\r\n        const movie_id = this.props.location.state.movie_id;\r\n        const reqVideos = await fetch(`https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${apiKey}&language=en-US`);\r\n        const resVideos = await reqVideos.json();\r\n        this.setState({videos:resVideos.results[0].key});\r\n    };\r\n\r\n    componentDidMount= () =>{\r\n\r\n        this.fetchOneMovie();\r\n        this.fetchSimiliar();\r\n        this.fetchVideos();\r\n\r\n\r\n    };\r\n    addHistory = (results) => {\r\n\r\n        const updateMoviesHistory = [JSON.parse(localStorage.getItem('history'))].flat(10);\r\n        console.log(updateMoviesHistory);\r\n        if(updateMoviesHistory[0]===null){\r\n            updateMoviesHistory.splice(0,1);\r\n        }\r\n\r\n        updateMoviesHistory.push(results);\r\n        localStorage.setItem('history',JSON.stringify(updateMoviesHistory));\r\n\r\n    };\r\n    componentDidUpdate= (prevState) =>{\r\n        if(this.state.movie_id!==prevState.movie_id){\r\n            this.componentDidMount();\r\n        }\r\n    };\r\n    movieId=()=>{\r\n      this.setState({movie_id:this.props.location.state.movie_id})\r\n    };\r\n    render(){\r\n      const {darkMode,changeTheme} = this.context;\r\n        return(\r\n          <div className={`body width100Small  ${darkMode?'darkBody':''} `}>\r\n            <div className={`container width100Small marginAuto ${darkMode?'darkBodySite':''}`}>\r\n                <nav className={`navbar sticky-top navbar-light bg-light header red margin ${darkMode?'darkHeader':''}`}>\r\n                    <Link to=\"/\"><button className={darkMode?'btn btn-secondary':'btn btn-warning'} >\r\n                        <i className=\"fas fa-arrow-left\"/>\r\n                    </button></Link>\r\n                  <button className={darkMode?'btn btn-secondary':'btn btn-warning'} onClick={()=>{changeTheme()}}>\r\n                    {darkMode? <i className=\"fas fa-sun\"/>: <i className=\"fas fa-moon\"/>}\r\n                  </button>\r\n                </nav>\r\n                <MovieP activeMovie={this.state.activeMovie}/>\r\n                <Video videos={this.state.videos}/>\r\n                <div className={'marginAuto'}>\r\n                    <h2>Recommendations:</h2>\r\n                    <MoviesRec movieId={this.movieId} addHistory={this.addHistory} recommend={this.state.recommend}  />\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n}};\r\n\r\nexport default MoviePage;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {ThemeContext} from \"./darkMode\";\r\nimport {AuthContext} from \"./darkMode\";\r\n\r\nclass User extends Component {\r\n\r\n\r\n  deleteHistory = () =>{\r\n    localStorage.clear();\r\n};\r\n\r\n  render() {\r\n\r\n    return (\r\n          <ThemeContext.Consumer>\r\n            {theme=>(\r\n                <div className={theme.darkMode ? 'darkBody' : ''}>\r\n                <div className={`App container ${theme.darkMode ? 'darkBodySite' : ''}`}>\r\n                <nav className={`navbar sticky-top navbar-light bg-light header red margin ${theme.darkMode ? 'darkHeader' : ''}`}>\r\n                <Link to=\"/\"><button className={theme.darkMode ? 'btn btn-secondary' : 'btn btn-warning'} >\r\n                <i className=\"fas fa-arrow-left\"/>\r\n                </button></Link>\r\n                <button className={theme.darkMode ? 'btn btn-secondary' : 'btn btn-warning'} onClick={this.deleteHistory}>\r\n                <i className=\"fas fa-trash\"/>\r\n                </button>\r\n                <button className={theme.darkMode ? 'btn btn-secondary' : 'btn btn-warning'} onClick={() => {\r\n                theme.changeTheme()\r\n              }}>\r\n                {theme.darkMode ? <i className=\"fas fa-sun\"/> : <i className=\"fas fa-moon\"/>}\r\n                </button>\r\n                </nav>\r\n                <div className='d-flex flex-wrap justify-content-start'>\r\n                {JSON.parse(localStorage.getItem('history'))\r\n                  ?\r\n                  JSON.parse(localStorage.getItem('history')).map((recommend) => {\r\n                    return (\r\n                      <div className={'marginAuto'} key={recommend.id}>\r\n\r\n                        <div\r\n                          className={`movieTableRecommends movieTablePopSmall marginAuto ${theme.darkMode ? 'darkTableMovie colorText' : ''}`}>\r\n                          <Link className={'colorText'} to={{\r\n                            pathname: `/MoviePage/${recommend.id}`,\r\n                            state: {\r\n                              movie_id: recommend.id\r\n                            }\r\n                          }}>\r\n                            <img className={'recommendImg posterSmall'}\r\n                                 src={`https://image.tmdb.org/t/p/w500${recommend.poster_path}`} alt={recommend.title}/>\r\n                          </Link>\r\n                          <h6>{recommend.title}</h6>\r\n                        </div>\r\n\r\n                      </div>\r\n                    );\r\n                  })\r\n                  :\r\n                  <div>\r\n                    <h2>Your story is empty</h2>\r\n                  </div>}\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n            )\r\n            }\r\n\r\n          </ThemeContext.Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {withAuth} from \"./darkMode\";\r\nimport {ThemeContext} from \"./darkMode\";\r\nimport Loader from \"./Loader/Loader\";\r\n\r\nclass Callback extends Component {\r\n\r\n  static contextType = ThemeContext;\r\n  componentDidMount() {\r\n    const {handleAuthentication} = this.props;\r\n    if(handleAuthentication){\r\n      handleAuthentication();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {darkMode}=this.context;\r\n    return (\r\n      <div className={darkMode ? 'darkBody App' : 'App'}>\r\n        <Loader/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  withAuth(Callback);","import React, {Component} from 'react';\r\nimport {withAuth} from \"./darkMode\";\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\n export default withAuth(({isAuthorized, authorize, darkMode, changeTheme}) => {\r\n\r\n    return (\r\n      isAuthorized?\r\n        <Redirect to='/'/>\r\n        :\r\n        <div className={ `${darkMode ? 'darkBody App' : 'App'}`}>\r\n          <div className={darkMode ? 'darkBody' : ''}>\r\n            <div className={`App container ${darkMode ? 'darkBodySite' : ''}`}>\r\n              <nav className={`navbar sticky-top navbar-light bg-light header red margin ${darkMode ? 'darkHeader' : ''}`}>\r\n                <Link to=\"/\"><button className={darkMode ? 'btn btn-secondary' : 'btn btn-warning'} >\r\n                  <i className=\"fas fa-arrow-left\"/>\r\n                </button></Link>\r\n\r\n                <button className={darkMode ? 'btn btn-secondary' : 'btn btn-warning'} onClick={() => {\r\n                  changeTheme()\r\n                }}>\r\n                  {darkMode ? <i className=\"fas fa-sun\"/> : <i className=\"fas fa-moon\"/>}\r\n                </button>\r\n              </nav>\r\n              <div className={darkMode?'darkTableMovie login':'login'}>\r\n                <h1>Log in to open</h1>\r\n                <button onClick={authorize} className={'btn btn-danger logBtn'} >Log in</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n})\r\n\r\n","import React, {Component} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {withAuth} from \"./darkMode\";\r\n\r\nexport const PrivateRoute =withAuth(({component:RouteComponent, isAuthorized, ...rest })=>(\r\n  <Route {...rest} render={routeProps=>(\r\n    isAuthorized ?\r\n      <RouteComponent {...routeProps}/>\r\n    :\r\n      <Redirect to={'/login'}/>\r\n  )}/>\r\n))\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {BrowserRouter,HashRouter,Switch,Route} from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport MoviePage from \"./MoviePage\";\r\nimport User from \"./User\"\r\nimport Callback from \"./callback\";\r\nimport Login from \"./Login\";\r\nimport {PrivateRoute} from \"./PrivateRoute\";\r\nimport {DarkModeContext} from \"./darkMode\";\r\n\r\nconst Router=()=>(\r\n\r\n    <BrowserRouter  basename={process.env.PUBLIC_URL}>\r\n      <DarkModeContext>\r\n        <Switch>\r\n            <Route path=\"/\" component={App} exact/>\r\n            <Route path=\"/moviePage/:id\" component={MoviePage}/>\r\n            <Route path='/login' component={Login}/>\r\n            <Route path =\"/callback\" component={Callback}/>\r\n            <PrivateRoute path = \"/user\" component={User}/>\r\n            <Route component={App}/>\r\n        </Switch>\r\n      </DarkModeContext>\r\n    </BrowserRouter>\r\n\r\n);\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Router from \"./Components/Router\";\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Router/>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}